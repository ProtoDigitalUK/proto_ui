---
import "@/styles/tailwind.css";
import C from "@/constants.json";
// Components
import { ViewTransitions } from "astro:transitions";
import Navigation from "@/components/layout/Navigation.astro";
import Hero from "@/components/blocks/Hero.astro";
import CookieController from "@/components/layout/CookieController.astro";

interface Props {
  meta: {
    title: string;
    description?: string;
  };
  hero?: {
    title: string;
    description?: string;
    links?: {
      href: string;
      label: string;
    }[];
    breadcrumbs?: {
      href: string;
      label: string;
    }[];
  };
}

const { meta, hero } = Astro.props;

// Breadcrumb schema
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: C.site_url,
    },
    ...(hero?.breadcrumbs?.map((breadcrumb, index) => {
      return {
        "@type": "ListItem",
        position: index + 2,
        name: breadcrumb.label,
        item: C.site_url + breadcrumb.href,
      };
    }) ?? []),
  ],
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;900&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{meta.title} | Proto Digital UI</title>
    <ViewTransitions />
    <script
      type="application/ld+json"
      set:html={JSON.stringify(breadcrumbSchema)}
    />
  </head>
  <body class="antialiased bg-ui-background">
    <main>
      <Navigation />
      <div
        class="bg-white mt-5 mr-5 ml-[300px] min-h-[calc(100vh-20px)] rounded-t-md overflow-hidden"
      >
        {
          hero !== undefined && (
            <Hero
              title={hero.title}
              description={hero.description}
              links={hero.links}
              breadcrumbs={hero.breadcrumbs}
            />
          )
        }
        <slot />
      </div>
    </main>
    <CookieController />
    <script src="../typescript/main.ts"></script>
  </body>
</html>
