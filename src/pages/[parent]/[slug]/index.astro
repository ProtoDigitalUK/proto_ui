---
import type { InferGetStaticParamsType, GetStaticPaths } from "astro";
// Data
import components, { type ComponentT, parentDetails } from "@/data/components";
// Components
import Layout from "@/layouts/Layout.astro";
import StickySectionLinks from "@/components/blocks/StickySectionLinks.tsx";
import P from "@/components/partials/P.tsx";
import VariationView from "@/components/blocks/VariationView";
import Integration from "@/components/blocks/Integration";

export const getStaticPaths = (async () => {
  return components.map((component) => ({
    params: {
      parent: component.parent,
      slug: component.slug,
    },
  }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { parent, slug } = Astro.params as Params;

const component = components.find(
  (comp) => comp.slug === slug && comp.parent === parent
) as ComponentT;
---

<Layout
  meta={{
    title: component.title,
  }}
  hero={{
    title: component.title,
    breadcrumbs: [
      {
        label: parentDetails[parent].title,
        href: `/${parent}`,
      },
      {
        label: component.title,
        href: `/${parent}/${slug}`,
      },
    ],
  }}
>
  <StickySectionLinks
    sections={[
      {
        id: "overview",
        label: "Overview",
      },
      {
        id: "components",
        label: "Components",
      },
      {
        id: "builder",
        label: "Builder",
      },
      {
        id: "dependencies",
        label: "Dependencies",
      },
      {
        id: "integration",
        label: "Integration",
      },
    ]}
  />
  <section id="overview" class="ui__wrapper my-10">
    <P>
      {component.overview}
    </P>
  </section>
  <VariationView
    variations={component.variations}
    slug={slug}
    parent={parent}
    client:load
  />
  <Integration />
</Layout>

<script>
  import { iframeResizer } from "iframe-resizer";

  iframeResizer({ log: false }, ".variation-iframe");
</script>
